@model _92031083_ModelRailStore.Models.BasketViewModel

@{
    ViewBag.Title = "Your Basket";
}

<div class="row"></div>

@if (Model.BasketLines.Count() > 0)
    {

    <div>
        @using (Html.BeginForm("UpdateBasket", "Basket"))
        {
            @Html.AntiForgeryToken();
            <input type="submit" id="submit-green-lg" value="Update Basket" />
            <hr />
            <div class="row">
                <div class="col-md-4 float-left">Item</div>
                <div class="col-md-3 float-left-sm">Quantity</div>
                <div class="col-md-1 float-left-sm">Price</div>
                <div class="col-md-1 float-left-sm">Subtotal</div>
            </div>
            <hr />
            for (int i = 0; i < Model.BasketLines.Count; i++)
            {
            <div class="row">
                <div class="col-md-4 float-left">
                    <h2 class="with-highlight">
                    @Html.ActionLink(Model.BasketLines[i].Product.Name, "Details", "Products", new { id =
                           Model.BasketLines[i].ProductID }, null)</h2><br />

                    @if (Model.BasketLines[i].Product.ProductImageMappings != null && Model.BasketLines[i].Product.ProductImageMappings.Any())
                        {
                        <a href="@Url.Action("Details", "Products", new { id = Model.BasketLines[i].ProductID })">
                            <img src="@(Url.Content(Constants.ProductThumbnailPath) + Model.BasketLines[i].Product.ProductImageMappings.
                                OrderBy( pim => pim.ImageNumber).ElementAt(0).ProductImage.FileName)">
                        </a>
                        }
                </div>

                <div class="col-md-3 float-left-sm">
                    @Html.HiddenFor(productID => Model.BasketLines[i].ProductID)
                    @Html.TextBoxFor(quantity => Model.BasketLines[i].Quantity, new { style = "width:80%;" })

                    <p>
                        @Html.ValidationMessageFor(quantity =>
                            Model.BasketLines[i].Quantity, "", new { @class = "text-danger" })
                    </p>
                </div>

                <div class="col-md-1 float-left-sm">
                    @Html.DisplayFor(price => Model.BasketLines[i].Product.Price)
                </div>

                <div class="col-md-1 float-left-sm">
                    @((Model.BasketLines[i].Quantity *Model.BasketLines[i].Product.Price).ToString("c"))
                </div>

                <div class="col-md-1 float-left-sm">
                    @Html.ActionLink("Remove", "RemoveLine", "Basket", new { id = Model.BasketLines[i].Product.ID }, 
                   htmlAttributes: new { @class = "label-green" })
                </div>
            </div>
            <hr />
        }
    }
    <div class="row">
        <div class="col-md-8 float-left">
        @Html.DisplayNameFor(model => model.TotalCost)
        </div>
    <div class="col-md-1 float-left">
            @Html.DisplayFor(model => model.TotalCost)
        </div>
        <div class="col-md-1 float-left">
            <a href="@Url.Action("Review", "Orders")">
                <img src="/Content/SiteImages/order.png" style="vertical-align: middle; width: 150px;" />
            </a>
        </div>
    </div>
</div>
}
else
{
    <div class="red-background">
        <div class="row"></div>
        <h3>Your Basket is empty</h3>
    </div>
}
<div>
    @Html.ActionLink("Continue Shopping", "Index", "Products", null, htmlAttributes: new { @class = "label-green" })
</div>

<div class="row"></div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}