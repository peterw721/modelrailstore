@*@model _92031083_ModelRailStore.Models.Product*@
@model _92031083_ModelRailStore.ViewModels.ProductViewModel

    @{
        ViewBag.Title = "Edit Product";
    }

<div class="bg-image">
    <div class="sidebar-left">
        <h4>@ViewBag.Title</h4>
    </div>
    <div class="row"></div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(vm => vm.CategoryID, Model.CategoryList, htmlAttributes: new { @class = "form-control" })
                    @*@Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                </div>
            </div>
            @for (int i = 0; i < Model.ImageLists.Count; i++)
            {
                <div class="form-group">
                    <div class="row"></div>
                    <label class="control-label label">Product Image @(i + 1):</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(vm => vm.ProductImages, Model.ImageLists[i], "Choose Image", htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.ImageLists, "", new { @class = "textdanger" })
                    </div>
                </div>
            }
            <div class="row"></div>
            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" id="submit-btn" value="Save" />
                </div>
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-md-10">
            @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "label" })
        </div>
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
